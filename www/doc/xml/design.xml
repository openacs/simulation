<?xml version='1.0' ?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [ 
<!-- Global variables are defined in variables.ent -->
]>

  <article id="design">
    <title>Design</title>
    <sect1 id="interfaces">
      <title>Interfaces</title>
      <sect2 id="page-map">
        <title>Page Map</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="page-map.png" format="png"/>
          </imageobject>
        </mediaobject>
      </sect2>
      <sect2 id="tcl-api">
        <title>TCL API</title>
        <para><ulink url="/api-doc/proc-search?query_string=simulation%3A%3A&amp;search_type=All+matches">TCL API</ulink></para>
        <para>Each TCL API item should include inputs, outputs, and a
        comment block describing any non-obvious internal issues.</para>
      </sect2>
      <sect2 id="sql-api">
        <title>SQL API</title>
        <para>None yet.</para>
      </sect2>
    </sect1>
    <sect1 id="internals">
      <title>Internal Design</title>
      <sect2 id="data-model">
        <title>Data Model</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="data-model.png" format="png"/>
          </imageobject>
        </mediaobject>
      </sect2>
    </sect1>
    <sect1>
      <title>Permissions</title>
      <table>
        <title>Permissions</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>
                User Type
              </entry>
              <entry>
                Implementation
              </entry>
              <entry>
                code
              </entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>System Administrator (SysAdmin).  Responsible for maintaining the installation.  </entry>
              <entry>is an OpenACS sitewide admin.  Should probably also have access to root on the host.</entry>
              <entry><computeroutput>acs_user::site_wide_admin_p</computeroutput></entry>
            </row>
            <row>
              <entry><emphasis role="strong">Service Administrator</emphasis> (ServAdmin).</entry>
              <entry>...</entry>
              <entry></entry>
            </row>
            <row>
              <entry><emphasis role="strong">Course Administrator</emphasis> (CoursAdmin).  Can instantiate simulations.  </entry>
              <entry></entry>
              <entry></entry>
            </row>
            <row>
              <entry><emphasis role="strong">Template Author</emphasis> (TemplAuth).  Create and edit templates in SIMBUILD.</entry>
              <entry></entry>
              <entry></entry>
            </row>
            <row>
              <entry><emphasis role="strong">Case Author</emphasis> (CasAuth).  Needs to be updated for new terminology - not sure what this role does.  </entry>
              <entry></entry>
              <entry></entry>
            </row>
            <row>
              <entry><emphasis role="strong">Sieberdam system administrator </emphasis> (SiebAdmin).  ie, package admin.  Installs and maintains the simulation package.  Creates CitAdmins. </entry>
              <entry></entry>
              <entry></entry>
            </row>
            <row>
              <entry><emphasis role="strong">City Administrator</emphasis> (CitAdmin).  Creats and edits sim objects.</entry>
              <entry></entry>
              <entry></entry>
            </row>

          </tbody>
        </tgroup>
      </table>

    </sect1>

    <sect1 id="object-orientation-notes">
      <title>Notes on an object-oriented simulated space</title>
      <para>An OpenACS simulation is a collection of interactive
      objects, plus a set of roles and tasks.  In the first part, it
      is conceptually similar to a MOO (Multiple-User Dungeon,
      Object-Oriented).  This is a technology dating to 1990, in which
      a database of interactive objects is presented to users through
      a text interface.  MOOs, in turn, are based on MUDs
      (Multiple-User Dungeons), which are many years older.  More
      recently, MOOs have been supplanted by multi-million dollar
      commercial MMORPGs (Massively Multiplayer Online Roleplaying
      Games), which are essentially MOOs with graphical instead of
      textual interfaces.  Given their lineage and success, it makes
      sense to draw on MOO technology when designing our simulation
      object model.</para>

      <sect2 id="verbs">
        <title>Objects</title>
        <para>Basic MOO objects</para>
<programlisting>
Root Class
  Room
  Thing
    Note
    sittable object
      furniture
  Event-dispatching object
    Containing Object
      Player
        Builder
          programmer
            wizard
        Guest
    Exit
    Container
      Openable Container
</programlisting>

        <sect3>
          <title>Object Attributes</title>
          <para>(From the LambdaMOO Programmer's Manual</para>
          <programlisting>
There are three fundamental attributes to every object:

   1. A flag (either true or false) specifying whether or not the object represents a player,
   2. The object that is its parent, and
   3. A list of the objects that are its children; that is, those
   objects for which this object is their parent. </programlisting>
          <para>"Every object has eight built-in properties whose values are constrained to be of particular types. "</para>
          <programlisting>
name         a string, the usual name for this object
owner        an object, the player who controls access to it
location     an object, where the object is in virtual reality
contents     a list of objects, the inverse of `location'
programmer   a bit, does the object have programmer rights?
wizard       a bit, does the object have wizard rights?
r            a bit, is the object publicly readable?
w            a bit, is the object publicly writable?
f            a bit, is the object fertile?
</programlisting>
          
        </sect3>
      </sect2>


      <sect2 id="verbs">
        <title>Verbs</title>
        <para>Minimal MOO verbs:</para>
        <itemizedlist>
          <listitem>
            <para>put</para>
            <para>take</para>
            <para>get</para>
            <para>drop</para>
          </listitem>
        </itemizedlist>
      </sect2>
    </sect1>
  </article>
  



